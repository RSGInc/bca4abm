
# Forking Workflow
# https://www.atlassian.com/git/tutorials/comparing-workflows/forking-workflow

#####
# create local development environment
#####

cd ~/work

# install anaconda with python 2.7

source ~/anaconda/bin/activate root
conda update conda

conda create -q -c synthicity -n bca python=2.7 cytoolz ipython-notebook jinja2 matplotlib numpy pandas pandana patsy pip pytables pytest pyyaml scipy statsmodels toolz
source activate bca
pip install bottle orca prettytable simplejson zbox
pip install openmatrix
pip install pytest-cov coveralls pep8 pytest-xdist

################################################################################


#####
# maintainer setup -  clone RSGInc/bca4abm
#####

# clone the repo which will be (conventionally and automatically) be named 'origin'
cd ~/work
git clone https://github.com/RSGInc/bca4abm.git ./bca4abm

# add the RSGInc repo as remote 'rsg' so we can speak the same language as contibutors
git remote add rsg https://github.com/RSGInc/bca4abm.git

# now things should look like this:
# $ git remote -v
# origin	https://github.com/RSGInc/bca4abm.git (fetch)
# origin	https://github.com/RSGInc/bca4abm.git (push)
# rsg	https://github.com/RSGInc/bca4abm.git (fetch)
# rsg	https://github.com/RSGInc/bca4abm.git (push)

#####
# contributor setup - fork RSGInc/bca4abm and clone <CONTRIBUTOR_USER>/bca4abm
#####

# first fork the rsg repo in github
https://help.github.com/articles/fork-a-repo/

# now, on your local development machine
# clone YOUR fork which will be (conventionaly and automatically) be named 'origin'
cd ~/work
git clone https://github.com/_CONTRIBUTOR_USER_/bca4abm.git ./bca4abm

# and add the RSGInc repo as remote named 'rsg'
git remote add rsg https://github.com/RSGInc/bca4abm.git

# or, if you accidentally cloned the RSGInc repo instead of your fork, all is not lost
git remote rename origin rsg
git remote add origin https://github.com/_CONTRIBUTOR_USER_/bca4abm.git
git branch --set-upstream-to=origin/master master

# now things should look like this:
# $ git remote -v
# origin	https://github.com/_CONTRIBUTOR_USER_/bca4abm.git (fetch)
# origin	https://github.com/_CONTRIBUTOR_USER_/bca4abm.git (push)
# rsg	https://github.com/RSGInc/bca4abm.git (fetch)
# rsg	https://github.com/RSGInc/bca4abm.git (push)


################################################################################

#####
# feature development workflow
#####

#####
# create/checkout development branch
#####

git pull rsg master


git branch _BRANCH_NAME_
git checkout _BRANCH_NAME_
# or
git checkout -b _BRANCH_NAME_

# at this point master will be tracking origin/master
# but the new branch is local (necessarily not a tracking branch)

#####
# develop in development branch
#####

cd ~/work/bca4abm

source ~/anaconda/bin/activate bca

echo "book" > dog.txt
git add .
git commit -a -m 'created book inside of a dog'

# run tests
py.test --boxed --cov bca4abm


#####
# push development branch to origin
#####

# bring up to date with rsg master
git pull --rebase rsg master

# run tests
py.test --boxed --cov bca4abm

git push origin _BRANCH_NAME_

# origin/testing has now been pushed, but local branch is NOT a tracking branch

###---------------------------------------------------------------------------
# if you are collaborating with another developer on this branch
# you might want to use a remote  tracking branch

# $ git branch -vv
#   master        d453418 [origin/master] commit message a
# * _BRANCH_NAME_ 4eee4e3 commit message b

# $ git pull
# There is no tracking information for the current branch.
# Please specify which branch you want to merge with.

# we can set it explicitly if we want to...
git branch -u origin/_BRANCH_NAME_

# so new we can just say
git push
###---------------------------------------------------------------------------

#####
# submit pull request
#####

# squash multiple commits into on in order to keep master history clean

git status
git pull --rebase rsg master

git log --oneline

git rebase --interactive <hash-of-last-commit-before-branch>
# Squash (s) all but your first commit.
# Update comment for commit

git push -u origin _BRANCH_NAME_ --force

# log in to github and submit pull request

# without waiting for pull request to be processed, you can checkout master and bring up to date
git checkout master
git pull rsg master
git push

###---------------------------------------------------------------------------
# maintainer workflow for handling pull request
# https://help.github.com/articles/using-pull-requests/
# https://help.github.com/articles/checking-out-pull-requests-locally/
###---------------------------------------------------------------------------

# once the pull request has been processed, cleanup branch and start again

# bring up to date
git checkout master
git pull rsg master
git push

# delete branch '_BRANCH_NAME_' locally and on remote
git checkout master
git branch -d _BRANCH_NAME_
git push origin --delete _BRANCH_NAME_

################################################################################
